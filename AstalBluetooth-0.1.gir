<?xml version='1.0' encoding='utf-8'?>
<repository xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0" version="1.2">
<include name="GObject" version="2.0" />
<include name="GLib" version="2.0" />
<include name="Gio" version="2.0" />
<package name="astal-bluetooth" />
<c:include name="astal-bluetooth.h" />
<namespace name="AstalBluetooth" version="0.1" c:prefix="AstalBluetooth" c:identifier-prefixes="AstalBluetooth" c:symbol-prefixes="astal_bluetooth">
	<class name="Adapter" c:type="AstalBluetoothAdapter" c:symbol-prefix="adapter" glib:type-name="AstalBluetoothAdapter" glib:get-type="astal_bluetooth_adapter_get_type" glib:type-struct="AdapterClass" parent="GObject.Object">
		<doc xml:whitespace="preserve">Object representing an [adapter](https://github.com/RadiusNetworks/bluez/blob/master/doc/adapter-api.txt).</doc>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject" />
		</field>
		<field name="priv" readable="0" private="1">
			<type name="AdapterPrivate" c:type="AstalBluetoothAdapterPrivate*" />
		</field>
		<method name="remove_device" c:identifier="astal_bluetooth_adapter_remove_device" throws="1">
			<doc xml:whitespace="preserve">This removes the remote device and the pairing information.
Possible errors: `InvalidArguments`, `Failed`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="device" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</parameter>
			</parameters>
		</method>
		<method name="start_discovery" c:identifier="astal_bluetooth_adapter_start_discovery" throws="1">
			<doc xml:whitespace="preserve">This method starts the device discovery procedure.
Possible errors: `NotReady`, `Failed`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="stop_discovery" c:identifier="astal_bluetooth_adapter_stop_discovery" throws="1">
			<doc xml:whitespace="preserve">This method will cancel any previous [method@AstalBluetooth.Adapter.start_discovery] procedure.
Possible errors: `NotReady`, `Failed`, `NotAuthorized`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="uuids">
			<doc xml:whitespace="preserve">List of 128-bit UUIDs that represents the available local services.</doc>
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*" />
			</array>
		</property>
		<method name="get_uuids" c:identifier="astal_bluetooth_adapter_get_uuids">
			<return-value transfer-ownership="full">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*" />
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*" />
				</parameter>
			</parameters>
		</method>
		<property name="discovering">
			<doc xml:whitespace="preserve">Indicates that a device discovery procedure is active.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_discovering" c:identifier="astal_bluetooth_adapter_get_discovering">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="modalias">
			<doc xml:whitespace="preserve">Local Device ID information in modalias format used by the kernel and udev.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_modalias" c:identifier="astal_bluetooth_adapter_get_modalias">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="name">
			<doc xml:whitespace="preserve">The Bluetooth system name (pretty hostname).</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_name" c:identifier="astal_bluetooth_adapter_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="class">
			<doc xml:whitespace="preserve">The Bluetooth class of device.</doc>
			<type name="guint" c:type="guint" />
		</property>
		<method name="get_class" c:identifier="astal_bluetooth_adapter_get_class">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="address">
			<doc xml:whitespace="preserve">The Bluetooth device address.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_address" c:identifier="astal_bluetooth_adapter_get_address">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="discoverable" writable="1">
			<doc xml:whitespace="preserve">Switch an adapter to discoverable or non-discoverable to either make it visible or hide it.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_discoverable" c:identifier="astal_bluetooth_adapter_get_discoverable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_discoverable" c:identifier="astal_bluetooth_adapter_set_discoverable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean" />
				</parameter>
			</parameters>
		</method>
		<property name="pairable" writable="1">
			<doc xml:whitespace="preserve">Switch an adapter to pairable or non-pairable.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_pairable" c:identifier="astal_bluetooth_adapter_get_pairable">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pairable" c:identifier="astal_bluetooth_adapter_set_pairable">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean" />
				</parameter>
			</parameters>
		</method>
		<property name="powered" writable="1">
			<doc xml:whitespace="preserve">Switch an adapter on or off.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_powered" c:identifier="astal_bluetooth_adapter_get_powered">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_powered" c:identifier="astal_bluetooth_adapter_set_powered">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean" />
				</parameter>
			</parameters>
		</method>
		<property name="alias" writable="1">
			<doc xml:whitespace="preserve">The Bluetooth friendly name.
In case no alias is set, it will return [property@AstalBluetooth.Adapter:name].</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_alias" c:identifier="astal_bluetooth_adapter_get_alias">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_alias" c:identifier="astal_bluetooth_adapter_set_alias">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
		<property name="discoverable-timeout" writable="1">
			<doc xml:whitespace="preserve">The discoverable timeout in seconds. A value of zero means that the timeout is disabled and it will stay in discoverable/limited mode forever 
until [method@AstalBluetooth.Adapter.stop_discovery] is invoked. The default value for the discoverable timeout should be `180`.</doc>
			<type name="guint" c:type="guint" />
		</property>
		<method name="get_discoverable_timeout" c:identifier="astal_bluetooth_adapter_get_discoverable_timeout">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_discoverable_timeout" c:identifier="astal_bluetooth_adapter_set_discoverable_timeout">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint" />
				</parameter>
			</parameters>
		</method>
		<property name="pairable-timeout" writable="1">
			<doc xml:whitespace="preserve">The pairable timeout in seconds.
A value of zero means that the timeout is disabled and it will stay in pairable mode forever. The default value for pairable timeout should be 
disabled `0`.</doc>
			<type name="guint" c:type="guint" />
		</property>
		<method name="get_pairable_timeout" c:identifier="astal_bluetooth_adapter_get_pairable_timeout">
			<return-value transfer-ownership="none">
				<type name="guint" c:type="guint" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_pairable_timeout" c:identifier="astal_bluetooth_adapter_set_pairable_timeout">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="guint" c:type="guint" />
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="AdapterClass" c:type="AstalBluetoothAdapterClass" glib:is-gtype-struct-for="Adapter">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass" />
		</field>
	</record>
	<record name="AdapterPrivate" c:type="AstalBluetoothAdapterPrivate" disguised="1" />
	<class name="Bluetooth" c:type="AstalBluetoothBluetooth" c:symbol-prefix="bluetooth" glib:type-name="AstalBluetoothBluetooth" glib:get-type="astal_bluetooth_bluetooth_get_type" glib:type-struct="BluetoothClass" parent="GObject.Object">
		<doc xml:whitespace="preserve">Manager object for `org.bluez`.</doc>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject" />
		</field>
		<field name="priv" readable="0" private="1">
			<type name="BluetoothPrivate" c:type="AstalBluetoothBluetoothPrivate*" />
		</field>
		<function name="get_default" c:identifier="astal_bluetooth_bluetooth_get_default">
			<doc xml:whitespace="preserve">Gets the default singleton Bluetooth object.</doc>
			<return-value transfer-ownership="full">
				<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
			</return-value>
		</function>
		<method name="toggle" c:identifier="astal_bluetooth_bluetooth_toggle">
			<doc xml:whitespace="preserve">Toggle the [property@AstalBluetooth.Adapter:powered] property of the [property@AstalBluetooth.Bluetooth:adapter].</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="astal_bluetooth_bluetooth_new">
			<return-value transfer-ownership="full">
				<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
			</return-value>
		</constructor>
		<property name="is-powered" writable="1">
			<doc xml:whitespace="preserve">`true` if any of the [property@AstalBluetooth.Bluetooth:adapters] are powered.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_is_powered" c:identifier="astal_bluetooth_bluetooth_get_is_powered">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="is-connected" writable="1">
			<doc xml:whitespace="preserve">`true` if any of the [property@AstalBluetooth.Bluetooth:devices] is connected.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_is_connected" c:identifier="astal_bluetooth_bluetooth_get_is_connected">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="adapter">
			<doc xml:whitespace="preserve">The first registered adapter which is usually the only adapter.</doc>
			<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
		</property>
		<method name="get_adapter" c:identifier="astal_bluetooth_bluetooth_get_adapter">
			<return-value transfer-ownership="none" nullable="1">
				<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="adapters">
			<doc xml:whitespace="preserve">List of adapters available on the host device.</doc>
			<type name="GLib.List" c:type="GList*">
				<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
			</type>
		</property>
		<method name="get_adapters" c:identifier="astal_bluetooth_bluetooth_get_adapters">
			<return-value transfer-ownership="container">
				<type name="GLib.List" c:type="GList*">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="devices">
			<doc xml:whitespace="preserve">List of registered devices on the `org.bluez` bus.</doc>
			<type name="GLib.List" c:type="GList*">
				<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
			</type>
		</property>
		<method name="get_devices" c:identifier="astal_bluetooth_bluetooth_get_devices">
			<return-value transfer-ownership="container">
				<type name="GLib.List" c:type="GList*">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="device-added">
			<doc xml:whitespace="preserve">Emitted when a new device is registered on the `org.bluez` bus.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="device-removed">
			<doc xml:whitespace="preserve">Emitted when a device is unregistered on the `org.bluez` bus.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="device" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="adapter-added">
			<doc xml:whitespace="preserve">Emitted when an adapter is registered on the `org.bluez` bus.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="adapter" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="adapter-removed">
			<doc xml:whitespace="preserve">Emitted when an adapter is unregistered on the `org.bluez` bus.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="adapter" transfer-ownership="none">
					<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="BluetoothClass" c:type="AstalBluetoothBluetoothClass" glib:is-gtype-struct-for="Bluetooth">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass" />
		</field>
		<field name="device_added">
			<callback name="bluetooth_device_added" c:type="bluetooth_device_added">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
					</parameter>
					<parameter name="device" transfer-ownership="none">
						<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="device_removed">
			<callback name="bluetooth_device_removed" c:type="bluetooth_device_removed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
					</parameter>
					<parameter name="device" transfer-ownership="none">
						<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="adapter_added">
			<callback name="bluetooth_adapter_added" c:type="bluetooth_adapter_added">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
					</parameter>
					<parameter name="adapter" transfer-ownership="none">
						<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="adapter_removed">
			<callback name="bluetooth_adapter_removed" c:type="bluetooth_adapter_removed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
					</parameter>
					<parameter name="adapter" transfer-ownership="none">
						<type name="AstalBluetooth.Adapter" c:type="AstalBluetoothAdapter*" />
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="BluetoothPrivate" c:type="AstalBluetoothBluetoothPrivate" disguised="1" />
	<class name="Device" c:type="AstalBluetoothDevice" c:symbol-prefix="device" glib:type-name="AstalBluetoothDevice" glib:get-type="astal_bluetooth_device_get_type" glib:type-struct="DeviceClass" parent="GObject.Object">
		<doc xml:whitespace="preserve">Object representing a [device](https://github.com/luetzel/bluez/blob/master/doc/device-api.txt).</doc>
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject" />
		</field>
		<field name="priv" readable="0" private="1">
			<type name="DevicePrivate" c:type="AstalBluetoothDevicePrivate*" />
		</field>
		<method name="connect_device" c:identifier="astal_bluetooth_device_connect_device">
			<doc xml:whitespace="preserve">This is a generic method to connect any profiles the remote device supports that can be connected to.
Possible errors: `NotReady`, `Failed`, `InProgress`, `AlreadyConnected`.</doc>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback" />
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*" />
				</parameter>
			</parameters>
		</method>
		<method name="connect_device_finish" c:identifier="astal_bluetooth_device_connect_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*" />
				</parameter>
			</parameters>
		</method>
		<method name="disconnect_device" c:identifier="astal_bluetooth_device_disconnect_device">
			<doc xml:whitespace="preserve">This method gracefully disconnects all connected profiles.
Possible errors: `NotConnected`.</doc>
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback" />
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*" />
				</parameter>
			</parameters>
		</method>
		<method name="disconnect_device_finish" c:identifier="astal_bluetooth_device_disconnect_device_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*" />
				</parameter>
			</parameters>
		</method>
		<method name="connect_profile" c:identifier="astal_bluetooth_device_connect_profile" throws="1">
			<doc xml:whitespace="preserve">This method connects a specific profile of this device. The UUID provided is the remote service UUID for the profile.
Possible errors: `Failed`, `InProgress`, `InvalidArguments`, `NotAvailable`, `NotReady`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="uuid" transfer-ownership="none">
					<doc xml:whitespace="preserve">the remote service UUID. </doc>
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
		<method name="disconnect_profile" c:identifier="astal_bluetooth_device_disconnect_profile" throws="1">
			<doc xml:whitespace="preserve">This method disconnects a specific profile of this device.
Possible errors: `Failed`, `InProgress`, `InvalidArguments`, `NotSupported`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="uuid" transfer-ownership="none">
					<doc xml:whitespace="preserve">the remote service UUID. </doc>
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
		<method name="pair" c:identifier="astal_bluetooth_device_pair" throws="1">
			<doc xml:whitespace="preserve">This method will connect to the remote device and initiate pairing.
Possible errors: `InvalidArguments`, `Failed`, `AlreadyExists`, `AuthenticationCanceled`, `AuthenticationFailed`, `AuthenticationRejected`, 
`AuthenticationTimeout`, `ConnectionAttemptFailed`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="cancel_pairing" c:identifier="astal_bluetooth_device_cancel_pairing" throws="1">
			<doc xml:whitespace="preserve">This method can be used to cancel a pairing operation initiated by [method@AstalBluetooth.Device.pair].
Possible errors: `DoesNotExist`, `Failed`.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="uuids">
			<doc xml:whitespace="preserve">List of 128-bit UUIDs that represents the available remote services.</doc>
			<array c:type="gchar**">
				<type name="utf8" c:type="gchar*" />
			</array>
		</property>
		<method name="get_uuids" c:identifier="astal_bluetooth_device_get_uuids">
			<return-value transfer-ownership="full">
				<array length="0" c:type="gchar**">
					<type name="utf8" c:type="gchar*" />
				</array>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*" />
				</parameter>
			</parameters>
		</method>
		<property name="connected">
			<doc xml:whitespace="preserve">Indicates if the remote device is currently connected.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_connected" c:identifier="astal_bluetooth_device_get_connected">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="legacy-pairing">
			<doc xml:whitespace="preserve">`true` if the device only supports the pre-2.1 pairing mechanism.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_legacy_pairing" c:identifier="astal_bluetooth_device_get_legacy_pairing">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="paired">
			<doc xml:whitespace="preserve">Indicates if the remote device is paired.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_paired" c:identifier="astal_bluetooth_device_get_paired">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="rssi">
			<doc xml:whitespace="preserve">Received Signal Strength Indicator of the remote device (inquiry or advertising).</doc>
			<type name="gint16" c:type="gint16" />
		</property>
		<method name="get_rssi" c:identifier="astal_bluetooth_device_get_rssi">
			<return-value transfer-ownership="none">
				<type name="gint16" c:type="gint16" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="adapter">
			<doc xml:whitespace="preserve">The object path of the adapter the device belongs to.</doc>
			<type name="utf8" c:type="char*" />
		</property>
		<method name="get_adapter" c:identifier="astal_bluetooth_device_get_adapter">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="char*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="address">
			<doc xml:whitespace="preserve">The Bluetooth device address of the remote device.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_address" c:identifier="astal_bluetooth_device_get_address">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon">
			<doc xml:whitespace="preserve">Proposed icon name.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_icon" c:identifier="astal_bluetooth_device_get_icon">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="modalias">
			<doc xml:whitespace="preserve">Remote Device ID information in modalias format used by the kernel and udev.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_modalias" c:identifier="astal_bluetooth_device_get_modalias">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="name">
			<doc xml:whitespace="preserve">The Bluetooth remote name.
It is always better to use [property@AstalBluetooth.Device:alias].</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_name" c:identifier="astal_bluetooth_device_get_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="appearance">
			<doc xml:whitespace="preserve">External appearance of device, as found on GAP service.</doc>
			<type name="guint16" c:type="guint16" />
		</property>
		<method name="get_appearance" c:identifier="astal_bluetooth_device_get_appearance">
			<return-value transfer-ownership="none">
				<type name="guint16" c:type="guint16" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="class">
			<doc xml:whitespace="preserve">The Bluetooth class of device of the remote device.</doc>
			<type name="guint32" c:type="guint32" />
		</property>
		<method name="get_class" c:identifier="astal_bluetooth_device_get_class">
			<return-value transfer-ownership="none">
				<type name="guint32" c:type="guint32" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="connecting" writable="1">
			<doc xml:whitespace="preserve">Indicates if this device is currently trying to be connected.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_connecting" c:identifier="astal_bluetooth_device_get_connecting">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="blocked" writable="1">
			<doc xml:whitespace="preserve">If set to `true` any incoming connections from the device will be immediately rejected.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_blocked" c:identifier="astal_bluetooth_device_get_blocked">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_blocked" c:identifier="astal_bluetooth_device_set_blocked">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean" />
				</parameter>
			</parameters>
		</method>
		<property name="trusted" writable="1">
			<doc xml:whitespace="preserve">Indicates if the remote is seen as trusted.</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_trusted" c:identifier="astal_bluetooth_device_get_trusted">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_trusted" c:identifier="astal_bluetooth_device_set_trusted">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean" />
				</parameter>
			</parameters>
		</method>
		<property name="alias" writable="1">
			<doc xml:whitespace="preserve">The name alias for the remote device.
In case no alias is set, it will return the remote device [property@AstalBluetooth.Device:name].</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_alias" c:identifier="astal_bluetooth_device_get_alias">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_alias" c:identifier="astal_bluetooth_device_set_alias">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalBluetooth.Device" c:type="AstalBluetoothDevice*" />
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DeviceClass" c:type="AstalBluetoothDeviceClass" glib:is-gtype-struct-for="Device">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass" />
		</field>
	</record>
	<record name="DevicePrivate" c:type="AstalBluetoothDevicePrivate" disguised="1" />
	<constant name="MAJOR_VERSION" c:identifier="ASTAL_BLUETOOTH_MAJOR_VERSION" value="0">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="MINOR_VERSION" c:identifier="ASTAL_BLUETOOTH_MINOR_VERSION" value="1">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="MICRO_VERSION" c:identifier="ASTAL_BLUETOOTH_MICRO_VERSION" value="0">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="VERSION" c:identifier="ASTAL_BLUETOOTH_VERSION" value="0.1.0">
		<type name="utf8" c:type="const gchar*" />
	</constant>
	<function name="get_default" c:identifier="astal_bluetooth_get_default">
		<doc xml:whitespace="preserve">Gets the default singleton Bluetooth object.</doc>
		<return-value transfer-ownership="full">
			<type name="AstalBluetooth.Bluetooth" c:type="AstalBluetoothBluetooth*" />
		</return-value>
	</function>
</namespace>
</repository>