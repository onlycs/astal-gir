<?xml version='1.0' encoding='utf-8'?>
<repository xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0" version="1.2">
<include name="GObject" version="2.0" />
<include name="GLib" version="2.0" />
<include name="Gtk" version="3.0" />
<include name="GdkPixbuf" version="2.0" />
<include name="Gio" version="2.0" />
<package name="astal-tray" />
<c:include name="astal-tray.h" />
<namespace name="AstalTray" version="0.1" c:prefix="AstalTray" c:identifier-prefixes="AstalTray" c:symbol-prefixes="astal_tray">
	<enumeration name="Category" c:type="AstalTrayCategory" glib:type-name="AstalTrayCategory" glib:get-type="astal_tray_category_get_type">
		<member name="application" c:identifier="ASTAL_TRAY_CATEGORY_APPLICATION" value="0" />
		<member name="communications" c:identifier="ASTAL_TRAY_CATEGORY_COMMUNICATIONS" value="1" />
		<member name="system" c:identifier="ASTAL_TRAY_CATEGORY_SYSTEM" value="2" />
		<member name="hardware" c:identifier="ASTAL_TRAY_CATEGORY_HARDWARE" value="3" />
	</enumeration>
	<function name="category_to_nick" c:identifier="astal_tray_category_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*" />
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="AstalTray.Category" c:type="AstalTrayCategory" />
			</instance-parameter>
		</parameters>
	</function>
	<enumeration name="Status" c:type="AstalTrayStatus" glib:type-name="AstalTrayStatus" glib:get-type="astal_tray_status_get_type">
		<member name="passive" c:identifier="ASTAL_TRAY_STATUS_PASSIVE" value="0" />
		<member name="active" c:identifier="ASTAL_TRAY_STATUS_ACTIVE" value="1" />
		<member name="needs_attention" c:identifier="ASTAL_TRAY_STATUS_NEEDS_ATTENTION" value="2" />
	</enumeration>
	<function name="status_to_nick" c:identifier="astal_tray_status_to_nick">
		<return-value transfer-ownership="full">
			<type name="utf8" c:type="gchar*" />
		</return-value>
		<parameters>
			<instance-parameter name="self" transfer-ownership="none">
				<type name="AstalTray.Status" c:type="AstalTrayStatus" />
			</instance-parameter>
		</parameters>
	</function>
	<class name="Tray" c:type="AstalTrayTray" c:symbol-prefix="tray" glib:type-name="AstalTrayTray" glib:get-type="astal_tray_tray_get_type" glib:type-struct="TrayClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject" />
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TrayPrivate" c:type="AstalTrayTrayPrivate*" />
		</field>
		<function name="get_default" c:identifier="astal_tray_tray_get_default">
			<doc xml:whitespace="preserve">Get the singleton instance of [class@AstalTray.Tray]</doc>
			<return-value transfer-ownership="none">
				<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
			</return-value>
		</function>
		<method name="get_item" c:identifier="astal_tray_tray_get_item">
			<doc xml:whitespace="preserve">gets the TrayItem with the given item-id.</doc>
			<return-value transfer-ownership="full">
				<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
				</instance-parameter>
				<parameter name="item_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="astal_tray_tray_new">
			<return-value transfer-ownership="full">
				<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
			</return-value>
		</constructor>
		<property name="items">
			<doc xml:whitespace="preserve">List of currently registered tray items</doc>
			<type name="GLib.List" c:type="GList*">
				<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
			</type>
		</property>
		<method name="get_items" c:identifier="astal_tray_tray_get_items">
			<return-value transfer-ownership="container">
				<type name="GLib.List" c:type="GList*">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="item-added">
			<doc xml:whitespace="preserve">emitted when a new tray item was added.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="item_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="item-removed">
			<doc xml:whitespace="preserve">emitted when a tray item was removed.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<parameter name="item_id" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="TrayClass" c:type="AstalTrayTrayClass" glib:is-gtype-struct-for="Tray">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass" />
		</field>
		<field name="item_added">
			<callback name="tray_item_added" c:type="tray_item_added">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
					</parameter>
					<parameter name="item_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*" />
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="item_removed">
			<callback name="tray_item_removed" c:type="tray_item_removed">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void" />
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
					</parameter>
					<parameter name="item_id" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*" />
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TrayPrivate" c:type="AstalTrayTrayPrivate" disguised="1" />
	<class name="TrayItem" c:type="AstalTrayTrayItem" c:symbol-prefix="tray_item" glib:type-name="AstalTrayTrayItem" glib:get-type="astal_tray_tray_item_get_type" glib:type-struct="TrayItemClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject" />
		</field>
		<field name="priv" readable="0" private="1">
			<type name="TrayItemPrivate" c:type="AstalTrayTrayItemPrivate*" />
		</field>
		<method name="activate" c:identifier="astal_tray_tray_item_activate">
			<doc xml:whitespace="preserve">send an activate request to the tray app.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="gint" />
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gint" c:type="gint" />
				</parameter>
			</parameters>
		</method>
		<method name="secondary_activate" c:identifier="astal_tray_tray_item_secondary_activate">
			<doc xml:whitespace="preserve">send a secondary activate request to the tray app.</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
				<parameter name="x" transfer-ownership="none">
					<type name="gint" c:type="gint" />
				</parameter>
				<parameter name="y" transfer-ownership="none">
					<type name="gint" c:type="gint" />
				</parameter>
			</parameters>
		</method>
		<method name="scroll" c:identifier="astal_tray_tray_item_scroll">
			<doc xml:whitespace="preserve">send a scroll request to the tray app. valid values for the orientation are "horizontal" and "vertical".</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
				<parameter name="delta" transfer-ownership="none">
					<type name="gint" c:type="gint" />
				</parameter>
				<parameter name="orientation" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*" />
				</parameter>
			</parameters>
		</method>
		<method name="create_menu" c:identifier="astal_tray_tray_item_create_menu">
			<doc xml:whitespace="preserve">creates a new Gtk Menu for this item.</doc>
			<return-value transfer-ownership="full" nullable="1">
				<type name="Gtk.Menu" c:type="GtkMenu*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<method name="to_json_string" c:identifier="astal_tray_tray_item_to_json_string">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="title">
			<doc xml:whitespace="preserve">The Title of the TrayItem</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_title" c:identifier="astal_tray_tray_item_get_title">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="category">
			<doc xml:whitespace="preserve">The category this item belongs to</doc>
			<type name="AstalTray.Category" c:type="AstalTrayCategory" />
		</property>
		<method name="get_category" c:identifier="astal_tray_tray_item_get_category">
			<return-value transfer-ownership="none">
				<type name="AstalTray.Category" c:type="AstalTrayCategory" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="status">
			<doc xml:whitespace="preserve">the current status of this item</doc>
			<type name="AstalTray.Status" c:type="AstalTrayStatus" />
		</property>
		<method name="get_status" c:identifier="astal_tray_tray_item_get_status">
			<return-value transfer-ownership="none">
				<type name="AstalTray.Status" c:type="AstalTrayStatus" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="tooltip">
			<doc xml:whitespace="preserve">the tooltip of this item</doc>
			<type name="AstalTray.Tooltip" c:type="AstalTrayTooltip*" />
		</property>
		<method name="get_tooltip" c:identifier="astal_tray_tray_item_get_tooltip">
			<return-value transfer-ownership="full" nullable="1">
				<type name="AstalTray.Tooltip" c:type="AstalTrayTooltip*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="tooltip-markup">
			<doc xml:whitespace="preserve">a markup representation of the tooltip. This is basically equvivalent to `tooltip.title \n tooltip.description`</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_tooltip_markup" c:identifier="astal_tray_tray_item_get_tooltip_markup">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="id">
			<doc xml:whitespace="preserve">the id of the item. This id is specified by the tray app.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_id" c:identifier="astal_tray_tray_item_get_id">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="is-menu">
			<doc xml:whitespace="preserve">If set, this only supports the menu, so showing the menu should be prefered over calling [method@AstalTray.TrayItem.activate].</doc>
			<type name="gboolean" c:type="gboolean" />
		</property>
		<method name="get_is_menu" c:identifier="astal_tray_tray_item_get_is_menu">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon-theme-path">
			<doc xml:whitespace="preserve">the icon theme path, where to look for the [property@AstalTray.TrayItem:icon-name].
It is recommended to use the [property@AstalTray.TrayItem:gicon] property, which does the icon lookups for you.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_icon_theme_path" c:identifier="astal_tray_tray_item_get_icon_theme_path">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon-name">
			<doc xml:whitespace="preserve">the name of the icon. This should be looked up in the [property@AstalTray.TrayItem:icon-theme-path] if set or in the currently used icon 
theme otherwise.
It is recommended to use the [property@AstalTray.TrayItem:gicon] property, which does the icon lookups for you.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_icon_name" c:identifier="astal_tray_tray_item_get_icon_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon-pixbuf">
			<doc xml:whitespace="preserve">a pixbuf containing the icon.
It is recommended to use the [property@AstalTray.TrayItem:gicon] property, which does the icon lookups for you.</doc>
			<type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*" />
		</property>
		<method name="get_icon_pixbuf" c:identifier="astal_tray_tray_item_get_icon_pixbuf">
			<return-value transfer-ownership="full">
				<type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="gicon" writable="1">
			<doc xml:whitespace="preserve">contains the items icon. This property is intended to be used with the gicon property of the Icon widget and the recommended way to display the 
icon. This property unifies the [property@AstalTray.TrayItem:icon-name], [property@AstalTray.TrayItem:icon-theme-path] and [property
@AstalTray.TrayItem:icon-pixbuf] properties.</doc>
			<type name="Gio.Icon" c:type="GIcon*" />
		</property>
		<method name="get_gicon" c:identifier="astal_tray_tray_item_get_gicon">
			<return-value transfer-ownership="none">
				<type name="Gio.Icon" c:type="GIcon*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<property name="item-id" writable="1">
			<doc xml:whitespace="preserve">the id of the item used to uniquely identify the TrayItems by this lib.</doc>
			<type name="utf8" c:type="gchar*" />
		</property>
		<method name="get_item_id" c:identifier="astal_tray_tray_item_get_item_id">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*" />
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="AstalTray.TrayItem" c:type="AstalTrayTrayItem*" />
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="changed">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
		</glib:signal>
		<glib:signal name="ready">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void" />
			</return-value>
		</glib:signal>
	</class>
	<record name="TrayItemClass" c:type="AstalTrayTrayItemClass" glib:is-gtype-struct-for="TrayItem">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass" />
		</field>
	</record>
	<record name="TrayItemPrivate" c:type="AstalTrayTrayItemPrivate" disguised="1" />
	<record name="Pixmap" c:type="AstalTrayPixmap" c:symbol-prefix="pixmap" glib:type-name="AstalTrayPixmap" glib:get-type="astal_tray_pixmap_get_type">
		<field name="width" writable="1">
			<type name="gint" c:type="gint" />
		</field>
		<field name="height" writable="1">
			<type name="gint" c:type="gint" />
		</field>
		<field name="bytes" writable="1">
			<array c:type="guint8*">
				<type name="guint8" c:type="guint8" />
			</array>
		</field>
		<field name="bytes_length1">
			<type name="gint" c:type="gint" />
		</field>
	</record>
	<record name="Tooltip" c:type="AstalTrayTooltip" c:symbol-prefix="tooltip" glib:type-name="AstalTrayTooltip" glib:get-type="astal_tray_tooltip_get_type">
		<field name="icon_name" writable="1">
			<type name="utf8" c:type="gchar*" />
		</field>
		<field name="icon" writable="1">
			<array c:type="AstalTrayPixmap*">
				<type name="AstalTray.Pixmap" c:type="AstalTrayPixmap" />
			</array>
		</field>
		<field name="icon_length1">
			<type name="gint" c:type="gint" />
		</field>
		<field name="title" writable="1">
			<type name="utf8" c:type="gchar*" />
		</field>
		<field name="description" writable="1">
			<type name="utf8" c:type="gchar*" />
		</field>
	</record>
	<constant name="MAJOR_VERSION" c:identifier="ASTAL_TRAY_MAJOR_VERSION" value="0">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="MINOR_VERSION" c:identifier="ASTAL_TRAY_MINOR_VERSION" value="1">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="MICRO_VERSION" c:identifier="ASTAL_TRAY_MICRO_VERSION" value="0">
		<type name="gint" c:type="gint" />
	</constant>
	<constant name="VERSION" c:identifier="ASTAL_TRAY_VERSION" value="0.1.0">
		<type name="utf8" c:type="const gchar*" />
	</constant>
	<function name="get_default" c:identifier="astal_tray_get_default">
		<doc xml:whitespace="preserve">Get the singleton instance of [class@AstalTray.Tray]</doc>
		<return-value transfer-ownership="full">
			<type name="AstalTray.Tray" c:type="AstalTrayTray*" />
		</return-value>
	</function>
</namespace>
</repository>